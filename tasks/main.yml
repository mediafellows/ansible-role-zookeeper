---
# tasks file for mediapeers.zookeeper

# TODO: split up later into sections marked by comments?

# --- Java setup ---

- name: Add Java apt repo
  apt_repository:
    repo: "{{ zookeeper_java_apt_repo }}"
    state: present
    update_cache: yes
  when:
    - zookeeper_java_install
    - zookeeper_java_apt_repo is defined

- name: Accept Oracle Licence if Oracle Java is used
  shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections; echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections creates=/usr/lib/jvm/java-8-oracle
  when:
    - zookeeper_java_install
    - zookeeper_java_apt_package | search('oracle')

- name: Install Java apt package
  apt:
    pkg: "{{ zookeeper_java_apt_package }}"
    state: present
  when: zookeeper_java_install

- name: Make sure Java is installed and getting it's version
  command: java -version
  register: java_version

- name: Output java version info
  debug:
    var: java_version.stdout_lines

# --- Zookeeper install from tarball ---

- name: Ensure zookeeper system user and group exist
  group:
    name: "{{ zookeeper_group }}"
    state: present

- user:
    name: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    home: "{{ zookeeper_install_dir }}"
    state: present

- name: Ensure zookeeper dirs exists
  file:
    path: "{{ item }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    state: directory
  with_items:
    - "{{ zookeeper_install_dir }}"
    - "{{ zookeeper_data_dir }}"

- name: Download Zookeeper tar package and unpack it into install dir
  unarchive:
    src: "{{ zookeeper_archive_url }}/{{ zookeeper_version }}/zookeeper-{{ zookeeper_version }}.tar.gz"
    dest: "{{ zookeeper_install_dir }}"
    user: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  notify:
    - restart zookeeper

# --- Zookeeper configuration ---

- name: Add configutation file for zookeeper
  template:
    src: zoo.cfg.j2
    dest: "{{ zookeeper_install_dir }}/conf/zoo.cfg"
  notify:
    - restart zookeeper

- name: Add environment file for zookeeper
  template:
    src: zookeeper-env.sh
    dest: "{{ zookeeper_install_dir }}/conf/zookeeper-env.sh"
  when: zookeeper_env_variables is defined
  notify:
    - restart zookeeper

- name: Add myid file
  template:
    src: myid.j2
    dest: "{{ zookeeper_data_dir }}/myid"
  notify:
    - restart zookeeper

- name: Add systemd startup config
  template:
    src: zookeeper.service.j2
    dest: /lib/systemd/system/zookeeper.service
  notifiy:
    - setup systemd
    - restart zookeeper
